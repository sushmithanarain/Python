#python program for creation of Arrays
#importing Numpy
import os
os.getcwd()

#change working directory
os.chdir()
os.getcwd()

import numpy as np

# Creating a rank 1 Array

arr = np.array([1, 2, 3])
print("Array with Rank 1: \n",arr)
Array with Rank 1: 
 [1 2 3]
 
# Creating a rank 2 Array

arr = np.array([[1, 2, 3],
                [4, 5, 6]])
print("Array with Rank 2: \n", arr)
Array with Rank 2: 
 [[1 2 3]
 [4 5 6]]
 
# Creating an array from tuple
arr = np.array((1, 3, 2))
print("\nArray created using "
      "passed tuple:\n", arr)
Array created using passed tuple:
 [1 3 2]
 
 
# 1. Python program to demonstrate indexing in numpy array
import numpy as np
 
# Initial Array
arr = np.array([[-1, 2, 0, 4],
                [4, -0.5, 6, 0],
                [2.6, 0, 7, 8],
                [3, -7, 4, 2.0]])
print("Initial Array: ")
print(arr)
Initial Array: 
[[-1.   2.   0.   4. ]
 [ 4.  -0.5  6.   0. ]
 [ 2.6  0.   7.   8. ]
 [ 3.  -7.   4.   2. ]]
 
 
# Printing a range of Array with the use of slicing method
sliced_arr = arr[:2, ::2]
print ("Array with first 2 rows and"
    " alternate columns(0 and 2):\n", sliced_arr)
 
Array with first 2 rows and alternate columns(0 and 2):
 [[-1.  0.]
 [ 4.  6.]]
# Printing elements at specific Indices
Index_arr = arr[[1, 1, 0, 3], 
                [3, 2, 1, 0]]
print ("\nElements at indices (1, 3), "
    "(1, 2), (0, 1), (3, 0):\n", Index_arr)
Elements at indices (1, 3), (1, 2), (0, 1), (3, 0):
 [0. 6. 2. 3.]
 
 
# 2. Python program to demonstrate basic operations on single array
import numpy as np
 
# Defining Array 1
a = np.array([[1, 2],
              [3, 4]])
# Defining Array 2
b = np.array([[4, 3],
              [2, 1]])
# Adding 1 to every element
print ("Adding 1 to every element:", a + 1)
Adding 1 to every element: [[2 3]
 [4 5]]
# Subtracting 2 from each element
print ("\nSubtracting 2 from each element:", b - 2)
 
Subtracting 2 from each element: [[ 2  1]
 [ 0 -1]]
# sum of array elements Performing Unary operations
print ("\nSum of all array "
       "elements: ", a.sum())
 
Sum of all array elements:  10
# Adding two arrays Performing Binary operations
print ("\nArray sum:\n", a + b)
Array sum:
 [[5 5]
 [5 5]]
#Q1. Write a NumPy program to create an array of 10 zeros, 10 ones, and 10 fives.

zeros = np.zeros(10)
ones = np.ones(10)
fives = np.ones(10) * 5

result = np.concatenate([zeros, ones, fives])

print(result)
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. 5. 5. 5. 5.
 5. 5. 5. 5. 5. 5.]
#Q2. Write a NumPy program to create a 3x3 identity matrix.

identity_matrix = np.identity(3)

print(identity_matrix)
[[1. 0. 0.]
 [0. 1. 0.]
 [0. 0. 1.]]
#Q3. Write a NumPy program to create a 3x4 matrix filled with values from 10 to 21

matrix = np.arange(10, 22).reshape(3, 4)

print(matrix)
[[10 11 12 13]
 [14 15 16 17]
 [18 19 20 21]]
#Q3. Write a NumPy program to create a 3x4 matrix filled with values from 10 to 21

matrix = np.arange(10, 22).reshape(3, 4)

print(matrix)
[[10 11 12 13]
 [14 15 16 17]
 [18 19 20 21]]
#Q5. Write a NumPy program to compute the sum of all elements, the sum of each column and the sum of each row in a given array.

array = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])

total_sum = np.sum(array)

col_sums = np.sum(array, axis=0)

row_sums = np.sum(array, axis=1)

print("Total sum:", total_sum)
print("Column sums:", col_sums)
print("Row sums:", row_sums)
Total sum: 45
Column sums: [12 15 18]
Row sums: [ 6 15 24]
#Q6. Write a NumPy program to compute the inner product of two given vectors.

vector1 = np.array([1, 2, 3])
vector2 = np.array([4, 5, 6])
inner_product = np.dot(vector1, vector2)

print("Inner product:", inner_product)
Inner product: 32
#Q7. Write a NumPy program to find missing data in a given array.

array = np.array([[1, 2, np.nan], [4, np.nan, 6], [7, 8, 9]])

missing_values = np.isnan(array)

print("Missing values:\n", missing_values)
Missing values:
 [[False False  True]
 [False  True False]
 [False False False]]
#Q8. Write a NumPy program to sort a given array by row and column in ascending order.

array = np.array([[3, 2, 1], [6, 5, 4], [9, 8, 7]])

sorted_rows = np.sort(array, axis=1)

sorted_columns = np.sort(array, axis=0)

print("Sorted rows:\n", sorted_rows)
print("Sorted columns:\n", sorted_columns)
Sorted rows:
 [[1 2 3]
 [4 5 6]
 [7 8 9]]
Sorted columns:
 [[3 2 1]
 [6 5 4]
 [9 8 7]]
##Our Assigned Activity 
matrix = np.arange(1,17).reshape(4,4)
print(matrix)
matrix1 = matrix[1:3:, 1:4:2]
matrix1
[[ 1  2  3  4]
 [ 5  6  7  8]
 [ 9 10 11 12]
 [13 14 15 16]]
array([[ 6,  8],
       [10, 12]])
